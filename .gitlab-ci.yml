image: docker:latest

variables:
  release: resume
  release_qa: ${release}-qa
  namespace: ${release}

before_script:
- mkdir -p ~/.kube
- echo "${KUBE_CONFIG}" | base64 -d > ~/.kube/config

stages:
- build
- deploy

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
  - cat "${CI_SERVER_TLS_CA_FILE}" >> /kaniko/ssl/certs/ca-certificates.crt
  script:
    - |
        tee /kaniko/.docker/config.json <<EOF
        {
          "auths": {
            "${CI_REGISTRY}": {
              "username":"${CI_REGISTRY_USER}",
              "password":"${CI_REGISTRY_PASSWORD}"
            }
          }
        }
        EOF
    - |
        /kaniko/executor \
          --context ${CI_PROJECT_DIR} \
          --cache=true \
          --dockerfile ${CI_PROJECT_DIR}/Dockerfile \
          --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} \
          --destination ${CI_REGISTRY_IMAGE}:latest
  
deploy:
  stage: deploy
  image:
    name: alpine/helm:3.0.0-rc.1
    entrypoint: [""]
  script:
  - |
      /usr/bin/helm upgrade ${release} \
        ./resume --install \
        --namespace ${namespace} \
        --values env/prod/values.yaml \
        --set image.tag=${CI_COMMIT_SHA} \
        --set image.repository=${CI_REGISTRY_IMAGE}
  only:
  - master

deploy-qa:
  stage: deploy
  image:
    name: alpine/helm:3.0.0-rc.1
    entrypoint: [""]
  script:
  - |
      /usr/bin/helm upgrade ${release_qa} \
        ./resume --install \
        --namespace ${namespace} \
        --values env/qa/values.yaml \
        --set image.tag=${CI_COMMIT_SHA} \
        --set image.repository=${CI_REGISTRY_IMAGE}
  only:
  - release/qa