image: docker:latest

variables: {}

before_script:
- mkdir -p ~/.kube
- echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
- mkdir -p dist

stages:
- build
- deploy

build:
  stage: build
  tags: 
  - build
  script:
  - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  - docker pull "${CI_REGISTRY}/${CI_PROJECT_PATH}:latest" || true
  - docker build --cache-from "${CI_REGISTRY}/${CI_PROJECT_PATH}:latest" --tag "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}" .
  - docker tag "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}" "${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
  - docker push "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}"
  - docker push "${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"

template-qa:
  stage: template
  image: 
    name: alpine/helm:2.9.0
    entrypoint: 
    - ""
  tags:
  - deploy
  script:
  - /usr/bin/helm template ./chart -n qa --namespace mmo-web-qa --values env/qa/values.yaml > dist/qa.yaml
  only:
  - release/qa
  artifacts:
    paths:
    - dist/
  
deploy-qa:
  stage: deploy
  image: gitlab.cs:4567/deploy/k8s-deploy:latest
  tags:
  - deploy
  script:
  - kubectl create ns mmo-web-qa || true
  - kubectl apply -f dist/qa.yaml
  only:
  - release/qa
  dependencies:
  - template-qa
  
template:
  stage: template
  image: 
    name: alpine/helm:2.9.0
    entrypoint: 
    - ""
  tags:
  - deploy
  script:
  - /usr/bin/helm template ./chart -n prod --namespace mmo-web --values env/qa/values.yaml > dist/prod.yaml
  only:
  - master
  artifacts:
    paths:
    - dist/
  
deploy:
  stage: deploy
  image: gitlab.cs:4567/deploy/k8s-deploy:latest
  tags:
  - deploy
  script:
  - kubectl create ns mmo-web || true
  - kubectl apply -f dist/prod.yaml
  only:
  - master
  dependencies:
  - template